---

- name: Check mandatory variables
  assert:
    that:
      - server_fqdn is defined
      - admin_user is defined
      - admin_pass is defined

- name: Setting up vProtect Node name
  set_fact:
    node_name: "{{ ansible_hostname }}"
  when: node_name is undefined

- name: Using the following vProtect Server FQDN
  debug:
    msg: "vProtect Server FQDN: {{ server_fqdn }}, vProtect Node name: {{ node_name }}"

- name: Add vProtect repository
  yum_repository:
    name: vProtect
    description: vProtect repo
    baseurl: "{{ vprotect_repo }}"
    gpgcheck: no

- name: Update all packages
  yum:
    name: '*'
    state: latest
    update_cache: yes

- name: Install vProtect Node
  yum:
    name: vprotect-node
    state: latest
    update_cache: yes

- name: Create staging space directory
  file:
    path: "/vprotect_data"
    owner: vprotect
    group: vprotect
    state: directory

- name: Configure vProtect Node
  command: vprotect-node-configure

- name: SSL - import vProtect Server certificate
  command: '/opt/vprotect/scripts/node_add_ssl_cert.sh {{ server_fqdn }} 8181'
  register: import_result
  changed_when: "'Certificate was added to keystore' in import_result.stdout"
  failed_when: "import_result.rc != 0 and 'already exists' not in import_result.stdout"

- name: Register node
  command: "vprotect node -r {{ node_name }} {{ admin_user }} https://{{ server_fqdn }}:8181/api {{ admin_pass }}"
  register: register_result
  changed_when: "'ERROR' not in register_result.stdout"
  failed_when: "'ERROR' in register_result.stdout and 'DB_ENTITY_ALREADY_EXISTS' not in register_result.stdout"

- name: Start and enable vProtect Node service
  service:
    name: vprotect-node
    daemon-reload: yes
    state: started
    enabled: yes
