---

- name: Set the Server FQDN variable if possible
  set_fact:
    server_fqdn: "{{ hostvars['localhost']['server_fqdn'] }}"
  when: server_fqdn is undefined and hostvars['localhost']['server_fqdn'] is defined

- name: Check mandatory variables
  assert:
    that:
      - server_fqdn is defined
      - admin_user is defined
      - admin_pass is defined

- name: Set the Node name variable
  set_fact:
    node_name: "{{ ansible_hostname }}"
  when: node_name is undefined

- name: Show the Server FQDN and Node name variables
  debug:
    msg: "Server FQDN: {{ server_fqdn }}, Node name: {{ node_name }}"

- name: Add package repository (Red Hat/SUSE)
  yum_repository:
    name: vProtect
    description: vProtect repo
    baseurl: "{{ vprotect_repo }}"
    gpgcheck: no
    reposdir: "{{ package_repos_dir }}"
  when: ansible_os_family == 'RedHat' or ansible_os_family == 'Suse'

- name: Add package repository (Debian/Ubuntu)
  apt_repository:
    repo: "deb [trusted=yes] {{ vprotect_repo }} ./"
  when: ansible_os_family == 'Debian'

- name: Install the Node
  package:
    name: vprotect-node
    state: latest

- name: Create staging space directory
  file:
    path: "/vprotect_data"
    owner: vprotect
    group: vprotect
    state: directory

- name: Configure the Node
  command: vprotect-node-configure

- name: Check if new SSL certificate import script exists
  stat:
    path: /opt/vprotect/node/scripts/node_add_ssl_cert.sh
  register: script_path_node

- name: Set SSL certificate import script path
  set_fact:
    ssl_script_path: "{{ '/opt/vprotect/node/scripts/node_add_ssl_cert.sh' if script_path_node.stat.exists else '/opt/vprotect/scripts/node_add_ssl_cert.sh' }}"

- name: SSL - import the Server certificate
  command: '{{ ssl_script_path }} {{ server_fqdn }} 8181'
  register: import_result
  changed_when: "'Certificate was added to keystore' in import_result.stdout"
  failed_when: "import_result.rc != 0 and 'already exists' not in import_result.stdout"

- name: Register the Node
  command: "vprotect node -r {{ node_name }} {{ admin_user }} https://{{ server_fqdn }}:8181/api {{ admin_pass | quote }}"
  register: register_result
  changed_when: "'ERROR' not in register_result.stdout"
  failed_when: "'ERROR' in register_result.stdout and 'DB_ENTITY_ALREADY_EXISTS' not in register_result.stdout"

- name: Start and enable the Node service
  systemd:
    name: vprotect-node
    daemon-reload: yes
    state: started
    enabled: yes
